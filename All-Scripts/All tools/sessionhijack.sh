#!/bin/bash



# List of tools and their installation methods
declare -A tools
tools=(
    ["owasp zap"]="sudo apt-get install owasp-zap -y"
    ["burpsuite"]="sudo apt-get install burpsuite -y"  # Might require additional setup
    ["bettercap"]="sudo apt-get install bettercap -y"
    ["websploit framework"]="git clone https://github.com/websploit/websploit.git && cd websploit && sudo python3 setup.py install"  # Update with the actual repo URL
    ["sslstrip"]="git clone https://github.com/moxie0/sslstrip.git && cd sslstrip && sudo python3 setup.py install"  # Update with the actual repo URL
    ["wireshark"]="sudo apt-get install wireshark -y"
    ["usm anywhere"]="Visit USM Anywhere website for installation instructions"  # Usually a commercial solution, check official website
    ["checkpoint ips"]="Visit Checkpoint website for installation instructions"  # Usually a commercial solution, check official website
    ["logrythm"]="Visit LogRhythm website for installation instructions"  # Usually a commercial solution, check official website
    ["SolarWinds"]="Visit SolarWinds website for installation instructions"  # Usually a commercial solution, check official website
    ["IBM security network IPS"]="Visit IBM website for installation instructions"  # Usually a commercial solution, check official website
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools
execute_tool() {
    local tool=$1

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "owasp zap")
            owasp-zap
            ;;
        "burpsuite")
            burpsuite
            ;;
        "bettercap")
            bettercap
            ;;
        "websploit framework")
            cd websploit && python3 websploit.py
            ;;
        "sslstrip")
            cd sslstrip && python3 sslstrip.py
            ;;
        "wireshark")
            wireshark
            ;;
        "usm anywhere")
            echo "USM Anywhere installation instructions: Visit the USM Anywhere website."
            ;;
        "checkpoint ips")
            echo "Checkpoint IPS installation instructions: Visit the Checkpoint website."
            ;;
        "logrythm")
            echo "LogRhythm installation instructions: Visit the LogRhythm website."
            ;;
        "SolarWinds")
            echo "SolarWinds installation instructions: Visit the SolarWinds website."
            ;;
        "IBM security network IPS")
            echo "IBM Security Network IPS installation instructions: Visit the IBM website."
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Security Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Execute tools
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool..."
    execute_tool "$tool"
    echo -e "\n=====================================\n"
done
