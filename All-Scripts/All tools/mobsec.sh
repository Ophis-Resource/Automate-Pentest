#!/bin/bash



# List of tools and their installation methods
declare -A tools
tools=(
    ["drozer"]="pip install drozer"
    ["androguard"]="pip install androguard"
    ["Frida"]="pip install frida-tools"
    ["mobsf"]="git clone https://github.com/MobileSecurityTesting/mobile-security-framework-mstg.git && cd mobile-security-framework-mstg && pip install -r requirements.txt"
    ["zanti"]="wget https://github.com/Samsung/zanti/releases/download/v2.7/zanti_v2.7.apk -O zanti.apk && adb install zanti.apk"
    ["network spoofer"]="git clone https://github.com/claudiotnet/network-spoofer.git && cd network-spoofer && pip install -r requirements.txt"
    ["loic"]="git clone https://github.com/NewEraCracker/LOIC.git && cd LOIC && ./LOIC"
    ["droidsheep"]="git clone https://github.com/droidsheep/droidsheep.git && cd droidsheep && pip install -r requirements.txt"
    ["orbot proxy"]="sudo apt-get install tor -y && tor --version"
    ["phonesploit"]="git clone https://github.com/WasatchHacks/phonesploit.git && cd phonesploit && python3 setup.py install"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools with the provided URL/IP address
execute_tool() {
    local tool=$1
    local address=$2

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "drozer")
            drozer console connect
            ;;
        "androguard")
            androguard
            ;;
        "Frida")
            frida
            ;;
        "mobsf")
            cd mobile-security-framework-mstg && python3 mobile-security-framework-mstg.py "$address"
            ;;
        "zanti")
            adb install zanti.apk
            ;;
        "network spoofer")
            cd network-spoofer && python3 network-spoofer.py "$address"
            ;;
        "loic")
            ./LOIC
            ;;
        "droidsheep")
            cd droidsheep && python3 droidsheep.py "$address"
            ;;
        "orbot proxy")
            tor
            ;;
        "phonesploit")
            cd phonesploit && python3 phonesploit.py "$address"
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Information Gathering Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Prompt for URL/IP address
read -p "Enter the URL or IP address to scan: " address

# Execute tools with the provided URL/IP address
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool with address $address..."
    execute_tool "$tool" "$address"
    echo -e "\n=====================================\n"
done
