#!/bin/bash


# List of tools and their installation methods
declare -A tools
tools=(
    ["sn1per"]="git clone https://github.com/1N3/Sn1per.git && cd Sn1per && ./install.sh"
    ["telnet"]="sudo apt install telnet"
    ["dig"]="sudo apt install dnsutils"
    ["openssl s_client"]="sudo apt install openssl"
    ["macof"]="sudo apt install dsniff"
    ["ddos ripper"]="echo 'Manual installation required: Visit https://github.com/ddos-ripper/ddos-ripper for instructions.'"
    ["ddos_attack.py"]="echo 'Manual installation required: Visit https://github.com/utsuboco/ddos_attack.py for instructions.'"
    ["goldeneye"]="git clone https://github.com/jseidl/GoldenEye.git && cd GoldenEye && pip install -r requirements.txt"
    ["hping"]="sudo apt install hping3"
    ["dos"]="echo 'Manual installation required: Visit https://github.com/dos/dos for instructions.'"
    ["flushdns"]="echo 'Manual installation required: Visit https://github.com/flushdns/flushdns for instructions.'"
    ["gphish"]="git clone https://github.com/gophish/gophish.git && cd gophish && go build"
    ["recon-ng"]="pip install recon-ng"
    ["the harvester"]="pip install theharvester"
    ["dnsrecon"]="pip install dnsrecon"
    ["netdiscover"]="sudo apt install netdiscover"
    ["unicornscan"]="sudo apt install unicornscan"
    ["osint"]="echo 'Manual installation required: Visit https://github.com/osint/osint for instructions.'"
    ["masscan"]="sudo apt install masscan"
    ["p0f"]="sudo apt install p0f"
    ["web data extractor"]="echo 'Manual installation required: Visit https://github.com/webdataextractor/webdataextractor for instructions.'"
    ["whois"]="sudo apt install whois"
    ["icmp traceroute"]="sudo apt install traceroute"
    ["tcptraceroute"]="sudo apt install tcptraceroute"
    ["traceroute"]="sudo apt install traceroute"
    ["megaping"]="git clone https://github.com/cheusov/megaping.git && cd megaping && make"
    ["bluto"]="git clone https://github.com/obscuritylabs/bluto.git && cd bluto && pip install -r requirements.txt"
    ["mimikatz"]="echo 'Manual installation required: Visit https://github.com/gentilkiwi/mimikatz for instructions.'"
    ["Rubeus"]="echo 'Manual installation required: Visit https://github.com/Rubeus/Rubeus for instructions.'"
    ["ldapdomaindump"]="git clone https://github.com/dirkjanm/ldapdomaindump.git && cd ldapdomaindump && pip install -r requirements.txt"
    ["bloodhound"]="echo 'Manual installation required: Visit https://github.com/BloodHoundAD/BloodHound for instructions.'"
    ["plumhound"]="git clone https://github.com/forensicninja/plumhound.git && cd plumhound && pip install -r requirements.txt"
    ["pingcastle"]="echo 'Manual installation required: Visit https://www.pingcastle.com/ for instructions.'"
    ["impacket"]="pip install impacket"
    ["kerbute"]="echo 'Manual installation required: Visit https://github.com/forensicninja/kerbute for instructions.'"
    ["responder/pretender"]="echo 'Manual installation required: Visit https://github.com/Responder/Responder for instructions.'"
    ["crackmapesc"]="pip install crackmapesc"
    ["certipi"]="echo 'Manual installation required: Visit https://github.com/forensicninja/certipi for instructions.'"
    ["pkinittools"]="echo 'Manual installation required: Visit https://github.com/forensicninja/pkinittools for instructions.'"
    ["evilwinrm"]="gem install evil-winrm"
    ["certify"]="echo 'Manual installation required: Visit https://github.com/certify/certify for instructions.'"
    ["powerview"]="echo 'Manual installation required: Visit https://github.com/PowerShellEmpire/PowerTools for instructions.'"
    ["sharphound"]="echo 'Manual installation required: Visit https://github.com/BloodHoundAD/SharpHound for instructions.'"
    ["purpleknight"]="echo 'Manual installation required: Visit https://github.com/forensicninja/purpleknight for instructions.'"
    ["angryip scanner"]="sudo apt install ipscan"
    ["advanced ip scanner"]="echo 'Manual installation required: Visit https://www.advanced-ip-scanner.com/ for instructions.'"
    ["nagios"]="sudo apt install nagios-nrpe-server"
    ["juniper"]="echo 'Manual installation required: Visit https://github.com/juniper/juniper for instructions.'"
    ["cuckoo sandbox"]="echo 'Manual installation required: Visit https://cuckoosandbox.org/ for instructions.'"
    ["apisec postman"]="echo 'Manual installation required: Visit https://github.com/apisec/postman for instructions.'"
    ["owasp amass"]="echo 'Manual installation required: Visit https://github.com/OWASP/Amass for instructions.'"
    ["log analysis using splunk"]="echo 'Manual installation required: Visit https://www.splunk.com/ for instructions.'"
    ["proxmax"]="echo 'Manual installation required: Visit https://github.com/proxmax/proxmax for instructions.'"
    ["network spoofer"]="echo 'Manual installation required: Visit https://github.com/network-spoofer/network-spoofer for instructions.'"
    ["dripper.py"]="echo 'Manual installation required: Visit https://github.com/dripper/dripper.py for instructions.'"
    ["ddos attack.py"]="echo 'Manual installation required: Visit https://github.com/ddos/ddos-attack.py for instructions.'"
    ["google fu"]="echo 'Manual installation required: Visit https://github.com/google/google-fu for instructions.'"
    ["haveibeenpwned"]="echo 'Manual installation required: Visit https://haveibeenpwned.com/ for instructions.'"
    ["weleakinfo"]="echo 'Manual installation required: Visit https://weleakinfo.com/ for instructions.'"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        if [[ "$install_command" == *"Manual installation required:"* ]]; then
            echo "$install_command"
        else
            read -p "Do you want to install $tool? (y/n): " choice
            if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
                echo "Installing $tool..."
                eval "$install_command"
                echo "$tool installed successfully."
            else
                echo "$tool installation skipped."
            fi
        fi
    else
        echo "$tool is already installed."
    fi
}

# Install tools
echo "Starting tool installation..."
for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Prompt for additional actions if needed
echo ""
read -p "Do you need to perform any additional setup or scans? (y/n): " additional_actions

if [[ "$additional_actions" == "y" || "$additional_actions" == "Y" ]]; then
    echo "Please perform any additional setup or scans as required."
else
    echo "No additional actions needed."
fi
