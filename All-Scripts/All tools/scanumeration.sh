#!/bin/bash



# List of tools and their installation methods
declare -A tools
tools=(
    ["nmap"]="apt-get install nmap -y"
    ["zenmap"]="apt-get install zenmap -y"
    ["masscan"]="apt-get install masscan -y"
    ["naabu"]="go install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest"
    ["amass"]="apt-get install amass -y"
    ["sublister"]="git clone https://github.com/aboul3la/Sublist3r.git && cd Sublist3r && pip3 install -r requirements.txt"
    ["dnsrecon"]="pip install dnsrecon"
    ["massdns"]="git clone https://github.com/blechschmidt/massdns.git && cd massdns && make"
    ["findomain"]="wget https://github.com/Findomain/Findomain/releases/latest/download/findomain-linux && chmod +x findomain-linux && mv findomain-linux /usr/local/bin/findomain"
    ["subjack"]="go install github.com/haccer/subjack@latest"
    ["sub0ver"]="git clone https://github.com/subover/subover.git && cd subover && go build"
    ["corscanner"]="git clone https://github.com/s0md3v/CorsScanner.git && cd CorsScanner && pip install -r requirements.txt"
    ["cnames"]="git clone https://github.com/Namechk/cnames.git && cd cnames && pip install -r requirements.txt"
    ["subhijack"]="git clone https://github.com/s0md3v/SubBrute.git && cd SubBrute && pip install -r requirements.txt"
    ["takeover"]="pip install takeover"
    ["arachni"]="apt-get install arachni -y"
    ["bluto"]="git clone https://github.com/0xInfection/bluto.git && cd bluto && go build"
    ["sqlninja"]="apt-get install sqlninja -y"
    ["ptf"]="git clone https://github.com/trustedsec/ptf.git && cd ptf && python ptf"
    ["jsql injection"]="git clone https://github.com/joaomatosf/jsql-injection.git && cd jsql-injection && mvn package"
    ["exploitpack"]="git clone https://github.com/exploitpack/exploitpack.git && cd exploitpack && python setup.py install"
    ["beefxss framework"]="git clone https://github.com/beefproject/beef.git && cd beef && bundle install"
    ["searchsploit"]="apt-get install exploitdb -y"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools with the provided URL/IP address
execute_tool() {
    local tool=$1
    local address=$2

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "nmap")
            nmap "$address"
            ;;
        "zenmap")
            zenmap "$address"
            ;;
        "masscan")
            masscan "$address"
            ;;
        "naabu")
            naabu -host "$address"
            ;;
        "amass")
            amass enum -d "$address"
            ;;
        "sublister")
            cd Sublist3r && python3 sublist3r.py -d "$address"
            ;;
        "dnsrecon")
            dnsrecon -d "$address"
            ;;
        "massdns")
            cd massdns && ./bin/massdns -r resolvers.txt -o S -w results.txt -d "$address"
            ;;
        "findomain")
            findomain -t "$address"
            ;;
        "subjack")
            subjack -w subdomains.txt -a -ssl -v
            ;;
        "sub0ver")
            subover -d "$address"
            ;;
        "corscanner")
            corscanner -u "$address"
            ;;
        "cnames")
            cnames -d "$address"
            ;;
        "subhijack")
            subbrute -d "$address"
            ;;
        "takeover")
            takeover -d "$address"
            ;;
        "arachni")
            arachni "$address"
            ;;
        "bluto")
            bluto -t "$address"
            ;;
        "sqlninja")
            sqlninja -t "$address"
            ;;
        "ptf")
            cd ptf && python ptf -i "$address"
            ;;
        "jsql injection")
            java -jar jsql-injection.jar -u "$address"
            ;;
        "exploitpack")
            cd exploitpack && python exploitpack.py
            ;;
        "beefxss framework")
            cd beef && ./beef
            ;;
        "searchsploit")
            searchsploit "$address"
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Information Gathering Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Prompt for URL/IP address
read -p "Enter the URL or IP address to scan: " address

# Execute tools with the provided URL/IP address
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool with address $address..."
    execute_tool "$tool" "$address"
    echo -e "\n=====================================\n"
done
