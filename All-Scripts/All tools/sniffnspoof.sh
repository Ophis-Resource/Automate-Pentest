#!/bin/bash

p

# List of tools and their installation methods
declare -A tools
tools=(
    ["wireshark"]="sudo apt-get install wireshark -y"
    ["bettercap"]="sudo apt-get install bettercap -y"
    ["Ettercap"]="sudo apt-get install ettercap-graphical -y"
    ["hamster"]="git clone https://github.com/antirez/hamster.git && cd hamster && make"
    ["driftnet"]="sudo apt-get install driftnet -y"
    ["responder"]="git clone https://github.com/spiderlabs/responder.git && cd responder && pip install -r requirements.txt"
    ["netool toolkit"]="git clone https://github.com/robertdavidgraham/netool.git && cd netool && python setup.py install"
    ["sslstrip"]="git clone https://github.com/moxie0/sslstrip.git && cd sslstrip && python setup.py install"
    ["dsniff"]="sudo apt-get install dsniff -y"
    ["mitmf"]="git clone https://github.com/byt3bl33d3r/mitmf.git && cd mitmf && pip install -r requirements.txt"
    ["arpoison"]="git clone https://github.com/robertdavidgraham/arpoison.git && cd arpoison && python setup.py install"
    ["arpspoof"]="sudo apt-get install dsniff -y"  # Included in dsniff package
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools
execute_tool() {
    local tool=$1

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "wireshark")
            wireshark
            ;;
        "bettercap")
            bettercap
            ;;
        "Ettercap")
            ettercap
            ;;
        "hamster")
            cd hamster && ./hamster
            ;;
        "driftnet")
            driftnet
            ;;
        "responder")
            cd responder && python responder.py
            ;;
        "netool toolkit")
            cd netool && python netool.py
            ;;
        "sslstrip")
            cd sslstrip && python sslstrip.py
            ;;
        "mitmf")
            cd mitmf && python mitmf.py
            ;;
        "arpoison")
            cd arpoison && python arpoison.py
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Network and MITM Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Execute tools
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool..."
    execute_tool "$tool"
    echo -e "\n=====================================\n"
done
