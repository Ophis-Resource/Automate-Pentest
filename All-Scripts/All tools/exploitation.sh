#!/bin/bash


# List of tools and their installation methods
declare -A tools
tools=(
    ["Metasploit"]="sudo apt-get install metasploit-framework -y"
    ["sqlninja"]="git clone https://github.com/sqlninja/sqlninja.git && cd sqlninja && make"
    ["sqlmap"]="git clone https://github.com/sqlmapproject/sqlmap.git && cd sqlmap"
    ["ptf"]="git clone https://github.com/trustedsec/ptf.git && cd ptf && python ptf.py"
    ["jsql injection"]="git clone https://github.com/ron1990/jsql-injection.git && cd jsql-injection && ./jsql-injection.sh"
    ["exploitpack"]="git clone https://github.com/exploitpack/exploitpack.git && cd exploitpack"
    ["Armitage"]="sudo apt-get install armitage -y"
    ["beefxss framework"]="git clone https://github.com/beefproject/beef.git && cd beef && ./beef"
    ["searchsploit"]="sudo apt-get install exploitdb -y"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools
execute_tool() {
    local tool=$1

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "Metasploit")
            msfconsole
            ;;
        "sqlninja")
            cd sqlninja && ./sqlninja.py
            ;;
        "sqlmap")
            cd sqlmap && python3 sqlmap.py
            ;;
        "ptf")
            cd ptf && python ptf.py
            ;;
        "jsql injection")
            cd jsql-injection && ./jsql-injection.sh
            ;;
        "exploitpack")
            cd exploitpack && ./exploitpack.sh
            ;;
        "Armitage")
            armitage
            ;;
        "beefxss framework")
            cd beef && ./beef
            ;;
        "searchsploit")
            searchsploit
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Red Teaming Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Execute tools
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool..."
    execute_tool "$tool"
    echo -e "\n=====================================\n"
done
