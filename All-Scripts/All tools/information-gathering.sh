#!/bin/bash



# List of tools and their installation methods
declare -A tools
tools=(
    ["nmap"]="apt-get install nmap -y"
    ["stealth scan"]="git clone https://github.com/your-repo/stealth-scan.git && cd stealth-scan && make"
    ["Dmitry"]="apt-get install dmitry -y"
    ["maltego"]="apt-get install maltego -y"
    ["the harvester"]="apt-get install theharvester -y"
    ["dnsrecon"]="pip install dnsrecon"
    ["netdiscover"]="apt-get install netdiscover -y"
    ["unicornscan"]="apt-get install unicornscan -y"
    ["p0f"]="apt-get install p0f -y"
    ["whois"]="apt-get install whois -y"
    ["icmp traceroute"]="apt-get install traceroute -y"
    ["tcptraceroute"]="apt-get install tcptraceroute -y"
    ["traceroute"]="apt-get install traceroute -y"
    ["megaping"]="pip install megaping"
    ["shodan"]="pip install shodan"
    ["osint framework"]="git clone https://github.com/your-repo/osint-framework.git && cd osint-framework && pip install -r requirements.txt"
    ["dirbuster"]="apt-get install dirbuster -y"
    ["wpscan"]="apt-get install wpscan -y"
    ["hackertarget"]="git clone https://github.com/your-repo/hackertarget.git && cd hackertarget && make"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools with the provided URL/IP address
execute_tool() {
    local tool=$1
    local address=$2

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "nmap")
            nmap "$address"
            ;;
        "stealth scan")
            cd stealth-scan && ./stealth-scan.sh "$address"
            ;;
        "Dmitry")
            dmitry -winsepf "$address"
            ;;
        "the harvester")
            theharvester -d "$address"
            ;;
        "dnsrecon")
            dnsrecon -d "$address"
            ;;
        "p0f")
            p0f -i "$address"
            ;;
        "whois")
            whois "$address"
            ;;
        "icmp traceroute")
            traceroute "$address"
            ;;
        "tcptraceroute")
            tcptraceroute "$address"
            ;;
        "traceroute")
            traceroute "$address"
            ;;
        "megaping")
            megaping "$address"
            ;;
        "osint framework")
            cd osint-framework && python3 osint_framework.py "$address"
            ;;
        "dirbuster")
            dirbuster -u "$address"
            ;;
        "wpscan")
            wpscan --url "$address"
            ;;
        "hackertarget")
            cd hackertarget && ./hackertarget.sh "$address"
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Information Gathering Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Prompt for URL/IP address
read -p "Enter the URL or IP address to scan: " address

# Execute tools with the provided URL/IP address
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool with address $address..."
    execute_tool "$tool" "$address"
    echo -e "\n=====================================\n"
done
