#!/bin/bash

# List of tools and their installation methods
declare -A tools
tools=(
    ["johntheripper"]="apt-get install john -y"
    ["hashcat"]="apt-get install hashcat -y"
    ["hydra"]="apt-get install hydra -y"
    ["rainbowcrack"]="apt-get install rainbowcrack -y"
    ["crunch"]="apt-get install crunch -y"
    ["medusa"]="apt-get install medusa -y"
    ["cewl"]="apt-get install cewl -y"
    ["patador"]="git clone https://github.com/pyupio/patador.git && cd patador && python3 setup.py install"
    ["ncrack"]="apt-get install ncrack -y"
    ["L0phtcrack"]="wget https://www.l0phtcrack.com/download/L0phtCrack_7.0.10_Install_x64.exe -O L0phtcrack_7.0.10_Install_x64.exe && wine L0phtcrack_7.0.10_Install_x64.exe"
    ["ophcrack"]="apt-get install ophcrack -y"
    ["thc hydra"]="apt-get install hydra -y"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools with the provided URL/IP address
execute_tool() {
    local tool=$1
    local address=$2

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "johntheripper")
            john "$address"
            ;;
        "hashcat")
            hashcat "$address"
            ;;
        "hydra")
            hydra "$address"
            ;;
        "rainbowcrack")
            rainbowcrack "$address"
            ;;
        "crunch")
            crunch "$address"
            ;;
        "medusa")
            medusa "$address"
            ;;
        "cewl")
            cewl "$address"
            ;;
        "patador")
            cd patador && python3 patador.py "$address"
            ;;
        "ncrack")
            ncrack "$address"
            ;;
        "L0phtcrack")
            wine L0phtcrack_7.0.10_Install_x64.exe
            ;;
        "ophcrack")
            ophcrack
            ;;
        "thc hydra")
            hydra "$address"
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Information Gathering Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Prompt for URL/IP address
read -p "Enter the URL or IP address to scan: " address

# Execute tools with the provided URL/IP address
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool with address $address..."
    execute_tool "$tool" "$address"
    echo -e "\n=====================================\n"
done
