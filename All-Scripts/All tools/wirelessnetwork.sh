#!/bin/bash


# List of tools and their installation methods
declare -A tools
tools=(
    ["arpspoof"]="sudo apt-get install dsniff -y"
    ["wifite"]="sudo apt-get install wifite -y"
    ["pixiewps"]="git clone https://github.com/wi-fi-analyzer/pixiewps.git && cd pixiewps && make"
    ["reaver"]="sudo apt-get install reaver -y"
    ["kismet"]="sudo apt-get install kismet -y"
    ["ettercap"]="sudo apt-get install ettercap-text-only -y"
    ["aircrack-ng"]="sudo apt-get install aircrack-ng -y"
    ["fern wifi cracker"]="git clone https://github.com/szpak/fern-wifi-cracker.git && cd fern-wifi-cracker && sudo python3 setup.py install"
    ["ghostphisher"]="git clone https://github.com/swisskyrepo/ghost-phisher.git && cd ghost-phisher && sudo python3 ghost-phisher.py"
    ["wifiphisher"]="git clone https://github.com/wifiphisher/wifiphisher.git && cd wifiphisher && sudo python3 setup.py install"
    ["airbase-ng"]="sudo apt-get install aircrack-ng -y"
    ["airdecap-ng"]="sudo apt-get install aircrack-ng -y"
    ["airgraph-ng"]="sudo apt-get install aircrack-ng -y"
    ["airmon-ng"]="sudo apt-get install aircrack-ng -y"
    ["airtun-ng"]="sudo apt-get install aircrack-ng -y"
    ["easside-ng"]="sudo apt-get install aircrack-ng -y"
    ["packetforge-ng"]="sudo apt-get install aircrack-ng -y"
    ["airdecloak-ng"]="sudo apt-get install aircrack-ng -y"
    ["airdrop-ng"]="sudo apt-get install aircrack-ng -y"
    ["aireplay-ng"]="sudo apt-get install aircrack-ng -y"
    ["wesside-ng"]="sudo apt-get install aircrack-ng -y"
    ["airodump-ng"]="sudo apt-get install aircrack-ng -y"
    ["airolib-ng"]="sudo apt-get install aircrack-ng -y"
    ["airserv-ng"]="sudo apt-get install aircrack-ng -y"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools with the provided URL/IP address
execute_tool() {
    local tool=$1
    local address=$2

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "arpspoof")
            arpspoof
            ;;
        "wifite")
            wifite
            ;;
        "pixiewps")
            cd pixiewps && ./pixiewps
            ;;
        "reaver")
            reaver
            ;;
        "kismet")
            kismet
            ;;
        "ettercap")
            ettercap -T -M arp:remote /$address// /$address//
            ;;
        "aircrack-ng")
            aircrack-ng
            ;;
        "fern wifi cracker")
            cd fern-wifi-cracker && python3 fern-wifi-cracker.py
            ;;
        "ghostphisher")
            cd ghost-phisher && sudo python3 ghost-phisher.py
            ;;
        "wifiphisher")
            cd wifiphisher && sudo python3 wifiphisher.py
            ;;
        "airbase-ng")
            airbase-ng
            ;;
        "airdecap-ng")
            airdecap-ng
            ;;
        "airgraph-ng")
            airgraph-ng
            ;;
        "airmon-ng")
            airmon-ng
            ;;
        "airtun-ng")
            airtun-ng
            ;;
        "easside-ng")
            easside-ng
            ;;
        "packetforge-ng")
            packetforge-ng
            ;;
        "airdecloak-ng")
            airdecloak-ng
            ;;
        "airdrop-ng")
            airdrop-ng
            ;;
        "aireplay-ng")
            aireplay-ng
            ;;
        "wesside-ng")
            wesside-ng
            ;;
        "airodump-ng")
            airodump-ng
            ;;
        "airolib-ng")
            airolib-ng
            ;;
        "airserv-ng")
            airserv-ng
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Information Gathering Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Prompt for URL/IP address
read -p "Enter the URL or IP address to scan: " address

# Execute tools with the provided URL/IP address
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool with address $address..."
    execute_tool "$tool" "$address"
    echo -e "\n=====================================\n"
done
