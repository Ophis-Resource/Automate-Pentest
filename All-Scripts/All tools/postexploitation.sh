#!/bin/bash


# List of tools and their installation methods
declare -A tools
tools=(
    ["empire"]="git clone https://github.com/EmpireProject/Empire.git && cd Empire && ./setup/install.sh"
    ["pupy"]="git clone https://github.com/n1nj4sec/pupy.git && cd pupy && python pupy.py"
    ["koadic"]="git clone https://github.com/zerosum0x0/koadic.git && cd koadic && python koadic.py"
    ["dnscat2"]="git clone https://github.com/iagox86/dnscat2.git && cd dnscat2 && gem install bundler && bundle install"
    ["mimikatz"]="wget https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20210322/mimikatz_trunk.zip && unzip mimikatz_trunk.zip && cd mimikatz"
    ["bloodhound"]="git clone https://github.com/BloodHoundAD/BloodHound.git && cd BloodHound && npm install"
    ["msf"]="sudo apt-get install metasploit-framework -y"
    ["veil-pillage framework"]="git clone https://github.com/Veil-Framework/Veil.git && cd Veil && ./setup.sh"
    ["powersploit"]="git clone https://github.com/PowerShellEmpire/PowerSploit.git && cd PowerSploit"
    ["powershell empire"]="git clone https://github.com/EmpireProject/Empire.git && cd Empire && ./setup/install.sh"
)

# Function to check and install tools
check_and_install() {
    local tool=$1
    local install_command=$2
    
    # Check if the tool is installed
    if ! command -v "$tool" &> /dev/null; then
        echo "$tool is not installed."
        read -p "Do you want to install $tool? (y/n): " choice
        if [[ "$choice" == "y" || "$choice" == "Y" ]]; then
            echo "Installing $tool..."
            eval "$install_command"
            echo "$tool installed successfully."
        else
            echo "$tool installation skipped."
        fi
    else
        echo "$tool is already installed."
    fi
}

# Function to execute tools
execute_tool() {
    local tool=$1

    # Trap Ctrl+C to handle interruption
    trap 'echo -e "\nInterrupt detected. Skipping $tool."; exit 1;' SIGINT

    case $tool in
        "empire")
            cd Empire && ./empire
            ;;
        "pupy")
            cd pupy && python pupy.py
            ;;
        "koadic")
            cd koadic && python koadic.py
            ;;
        "dnscat2")
            cd dnscat2 && ruby dnscat2.rb
            ;;
        "mimikatz")
            cd mimikatz && ./mimikatz
            ;;
        "bloodhound")
            cd BloodHound && ./bloodhound
            ;;
        "msf")
            msfconsole
            ;;
        "veil-pillage framework")
            cd Veil && ./Veil.py
            ;;
        "powersploit")
            cd PowerSploit
            ;;
        "powershell empire")
            cd Empire && ./empire
            ;;
        *)
            echo "Unknown tool: $tool"
            ;;
    esac
}

# Main script execution
echo "Red Teaming Tools"
echo "List of tools available in this script:"
for tool in "${!tools[@]}"; do
    echo "- $tool"
done

echo ""
echo "Starting tool check and installation process..."

for tool in "${!tools[@]}"; do
    install_command="${tools[$tool]}"
    check_and_install "$tool" "$install_command"
done

echo "Tool installation process completed."

# Execute tools
for tool in "${!tools[@]}"; do
    echo -e "\n=====================================\n"
    echo "Executing $tool..."
    execute_tool "$tool"
    echo -e "\n=====================================\n"
done
