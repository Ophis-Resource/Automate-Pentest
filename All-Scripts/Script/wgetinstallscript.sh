#!/bin/bash

# Function to install each tool
install_tool() {
    local tool="$1"
    local url="$2"
    local dest="$3"
    local extract_cmd="$4"
    local post_cmd="$5"
    
    echo "Downloading $tool..."
    wget "$url" -O "$dest"
    
    if [ -n "$extract_cmd" ]; then
        echo "Extracting $tool..."
        eval "$extract_cmd"
    fi

    if [ -n "$post_cmd" ]; then
        echo "Executing post-installation commands for $tool..."
        eval "$post_cmd"
    fi
}

# Define the installation parameters for each tool
declare -A tools=(
    ["manageengine"]="https://www.manageengine.com/downloads/manageengine.zip manageengine.zip 'unzip manageengine.zip'"
    ["nexpose"]="https://downloads.rapid7.com/nexpose/latest/nexpose-linux-x64-7.0.50-ubuntu.deb nexpose.deb 'sudo dpkg -i nexpose.deb && sudo apt-get install -f -y'"
    ["burpsuite"]="https://portswigger-cdn.net/burp/releases/download?product=community&version=2024.6.2&type=jar burpsuite.jar"
    ["vega"]="https://github.com/subgraph/Vega/releases/download/v1.0.4/vega-linux-x64-1.0.4.tar.gz vega.tar.gz 'tar -xvf vega.tar.gz && sudo mv vega /opt/ && sudo ln -s /opt/vega/vega /usr/local/bin/vega'"
    ["arachni"]="https://github.com/Arachni/arachni/releases/download/1.5.1/arachni-1.5.1-0.5.12-linux-x86_64.tar.gz arachni.tar.gz 'tar -xvf arachni.tar.gz && sudo mv arachni-1.5.1 /opt/arachni && sudo ln -s /opt/arachni/bin/arachni /usr/local/bin/arachni'"
    ["skipfish"]="https://github.com/spinkham/skipfish/releases/download/2.11b/skipfish-2.11b.tgz skipfish.tgz 'tar -xvf skipfish.tgz && sudo mv skipfish-2.11b /opt/skipfish && sudo ln -s /opt/skipfish/skipfish /usr/local/bin/skipfish'"
    ["dockle"]="https://github.com/goodwithtech/dockle/releases/download/v0.3.0/dockle-linux-amd64-0.3.0.tar.gz dockle-linux-amd64-0.3.0.tar.gz 'tar -xvf dockle-linux-amd64-0.3.0.tar.gz && mv dockle /usr/local/bin/'"
    ["findomain"]="https://github.com/Findomain/Findomain/releases/latest/download/findomain-linux findomain-linux 'chmod +x findomain-linux && mv findomain-linux /usr/local/bin/findomain'"
    ["hadolint"]="https://github.com/hadolint/hadolint/releases/download/v2.8.0/hadolint-Linux-x86_64 hadolint-Linux-x86_64 'mv hadolint-Linux-x86_64 /usr/local/bin/hadolint && chmod +x /usr/local/bin/hadolint'"
    ["zanti"]="https://github.com/Samsung/zanti/releases/download/v2.7/zanti_v2.7.apk zanti.apk 'adb install zanti.apk'"
    ["L0phtcrack"]="https://www.l0phtcrack.com/download/L0phtCrack_7.0.10_Install_x64.exe L0phtCrack_7.0.10_Install_x64.exe 'wine L0phtCrack_7.0.10_Install_x64.exe'"
    ["gophish"]="https://github.com/gophish/gophish/releases/download/v0.12.1/gophish-v0.12.1-linux-64bit.zip gophish.zip 'unzip gophish.zip && cd gophish-v0.12.1 && ./gophish'"
    ["modlishka"]="https://github.com/drk1wi/Modlishka/releases/download/1.0/modlishka-linux-amd64 modlishka 'chmod +x modlishka'"
    ["lucy"]="https://github.com/ustayready/lucy/releases/download/v1.2/lucy-v1.2-linux-x86_64.tar.gz lucy.tar.gz 'tar -xvf lucy.tar.gz && cd lucy && ./lucy'"
    ["mimikatz"]="https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20210322/mimikatz_trunk.zip mimikatz_trunk.zip 'unzip mimikatz_trunk.zip && cd mimikatz'"
)

# Install each tool
for tool in "${!tools[@]}"; do
    IFS=' ' read -r url dest extract_cmd post_cmd <<<"${tools[$tool]}"
    install_tool "$tool" "$url" "$dest" "$extract_cmd" "$post_cmd"
done

echo "All tools have been installed."
