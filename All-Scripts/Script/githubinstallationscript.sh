#!/bin/bash

# Define an associative array of commands to execute for each tool
declare -A commands=(
    ["bluto"]="git clone https://github.com/0xInfection/bluto.git && cd bluto && go build"
    ["ptf"]="git clone https://github.com/trustedsec/ptf.git && cd ptf && python ptf"
    ["jsql injection"]="git clone https://github.com/joaomatosf/jsql-injection.git && cd jsql-injection && mvn package"
    ["exploitpack"]="git clone https://github.com/exploitpack/exploitpack.git && cd exploitpack && python setup.py install"
    #["beefxss framework"]="git clone https://github.com/beefproject/beef.git && cd beef && bundle install"
    ["w3af"]="git clone https://github.com/andresriancho/w3af.git && cd w3af && pip install -r requirements.txt"
    ["sublister"]="git clone https://github.com/aboul3la/Sublist3r.git && cd Sublist3r && pip3 install -r requirements.txt"
    ["naabu"]="go install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest"
    ["massdns"]="git clone https://github.com/blechschmidt/massdns.git && cd massdns && make"
    ["subjack"]="go install github.com/haccer/subjack@latest"
    ["sub0ver"]="git clone https://github.com/subover/subover.git && cd subover && go build"
    ["corscanner"]="git clone https://github.com/s0md3v/CorsScanner.git && cd CorsScanner && pip install -r requirements.txt"
    ["cnames"]="git clone https://github.com/Namechk/cnames.git && cd cnames && pip install -r requirements.txt"
    ["subhijack"]="git clone https://github.com/s0md3v/SubBrute.git && cd SubBrute && pip install -r requirements.txt"
    ["p0f"]="apt-get install p0f -y"
    ["netdiscover"]="apt-get install netdiscover -y"
    ["recon-ng"]="apt-get install recon-ng -y"  # Requires user input for confirmation
    ["maltego"]="apt-get install maltego -y"
    ["stealth scan"]="git clone https://github.com/your-repo/stealth-scan.git && cd stealth-scan && make"
    ["golismero"]="git clone https://github.com/golismero/golismero.git && cd golismero && pip install -r requirements.txt"
    ["uniscan"]="git clone https://github.com/ardamavi/uniscan.git && cd uniscan && chmod +x uniscan && sudo cp uniscan /usr/local/bin/"
    ["ICS exploitation framework"]="git clone https://github.com/username/ics-exploitation-framework.git && cd ics-exploitation-framework && make && sudo make install"
    ["rfcrack"]="git clone https://github.com/username/rfcrack.git && cd rfcrack && make && sudo make install"
    ["deepce"]="git clone https://github.com/deepce/deepce.git"
    ["dockerscout"]="git clone https://github.com/docker/docker-scout.git"
    ["apiclarity"]="git clone https://github.com/arachnys/apiclarity.git"
    ["modbus cli"]="git clone https://github.com/username/modbus-cli.git && cd modbus-cli && make && sudo make install"
    ["anchore-engine"]="git clone https://github.com/anchore/anchore-engine.git"
    ["dagda"]="git clone https://github.com/avast/dagda.git"
    ["megaping"]="pip install megaping"
    ["shodan"]="pip install shodan"
    ["google dorking"]="pip install googledork"
    ["waybackmachine"]="pip install waybackmachine"
    ["osint framework"]="git clone https://github.com/your-repo/osint-framework.git && cd osint-framework && pip install -r requirements.txt"
    ["bluto"]="git clone https://github.com/obscuritylabs/bluto.git && cd bluto && pip install -r requirements.txt"
    ["ldapdomaindump"]="git clone https://github.com/dirkjanm/ldapdomaindump.git && cd ldapdomaindump && pip install -r requirements.txt"
    ["plumhound"]="git clone https://github.com/forensicninja/plumhound.git && cd plumhound && pip install -r requirements.txt"
    ["goldeneye"]="git clone https://github.com/jseidl/GoldenEye.git && cd GoldenEye && pip install -r requirements.txt"
    ["gphish"]="git clone https://github.com/gophish/gophish.git && cd gophish && go build"
    ["secret scanner"]="pip install git+https://github.com/airbnb/semgrep"
    ["syft"]="curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh"
    ["sn1per"]="git clone https://github.com/1N3/Sn1per.git && cd Sn1per && ./install.sh"
    ["ddos ripper"]="git clone https://github.com/yourrepo/ddos-ripper.git && cd ddos-ripper"  # Update with the actual repo URL
    ["ddos_attack.py"]="git clone https://github.com/yourrepo/ddos-attack.py.git && cd ddos-attack.py"  # Update with the actual repo URL
    ["goldeneye"]="git clone https://github.com/yourrepo/goldeneye.git && cd goldeneye"  # Update with the actual repo URL
    ["hoic"]="git clone https://github.com/yourrepo/hoic.git && cd hoic"  # Update with the actual repo URL
    ["loic"]="git clone https://github.com/yourrepo/loic.git && cd loic"  # Update with the actual repo URL
    ["xioc"]="git clone https://github.com/yourrepo/xioc.git && cd xioc"  # Update with the actual repo URL
    ["hulk"]="git clone https://github.com/yourrepo/hulk.git && cd hulk"  # Update with the actual repo URL
    ["tor's hammer"]="git clone https://github.com/yourrepo/tor-hammer.git && cd tor-hammer"  # Update with the actual repo URL
    ["soloris"]="git clone https://github.com/yourrepo/soloris.git && cd soloris"  # Update with the actual repo URL
    ["slowloris"]="git clone https://github.com/yourrepo/slowloris.git && cd slowloris"  # Update with the actual repo URL
    ["pyloris"]="git clone https://github.com/yourrepo/pyloris.git && cd pyloris"  # Update with the actual repo URL
    ["r u dead yet rudy"]="git clone https://github.com/yourrepo/rudy.git && cd rudy"  # Update with the actual repo URL
    ["dockerlint"]="git clone https://github.com/alternante/dockerlint.git"
    ["clair"]="git clone https://github.com/quay/clair.git"
    ["amicontained"]="git clone https://github.com/amicontained/amicontained.git"
    ["dockscan"]="git clone https://github.com/simonbates/dockscan.git"
    ["mobsf"]="git clone https://github.com/MobileSecurityTesting/mobile-security-framework-mstg.git && cd mobile-security-framework-mstg && pip install -r requirements.txt"
    ["patador"]="git clone https://github.com/pyupio/patador.git && cd patador && python3 setup.py install"
    ["corstest"]="git clone https://github.com/airbnb/corstest.git && cd corstest && pip install -r requirements.txt"
    ["corsme"]="git clone https://github.com/s0md3v/CorsMe.git && cd CorsMe && pip install -r requirements.txt"
    ["crlfsuite"]="git clone https://github.com/portcullis/crlfuzz.git && cd crlfuzz && pip install -r requirements.txt"
    ["injectus"]="git clone https://github.com/0xInfection/Injectus.git && cd Injectus && pip install -r requirements.txt"
    ["xsrfprobe"]="git clone https://github.com/sa7mon/xsrfprobe.git && cd xsrfprobe && pip install -r requirements.txt"
    ["dotdotpwn"]="git clone https://github.com/wireghoul/dotdotpwn.git && cd dotdotpwn && chmod +x dotdotpwn.pl"
    ["fuzzdb"]="git clone https://github.com/fuzzdb-project/fuzzdb.git && cd fuzzdb"
    ["fuzzapi"]="git clone https://github.com/fuzzapi/fuzzapi.git && cd fuzzapi && pip install -r requirements.txt"
    ["kingphisher"]="git clone https://github.com/securestate/king-phisher.git && cd king-phisher && python3 setup.py install"
    ["phishx"]="git clone https://github.com/s0md3v/PhishX.git && cd PhishX && pip install -r requirements.txt"
    ["shellphish"]="git clone https://github.com/shellphish/shellphish.git && cd shellphish && pip install -r requirements.txt"
    ["scythe"]="git clone https://github.com/scythe-io/scythe.git && cd scythe && python3 setup.py install"
    ["wolfcreds"]="git clone https://github.com/wolfcreds/wolfcreds.git && cd wolfcreds && pip install -r requirements.txt"
    ["bloodhound"]="git clone https://github.com/BloodHoundAD/BloodHound.git && cd BloodHound && pip install -r requirements.txt"
    ["sharpfuzz"]="git clone https://github.com/forensicninja/sharpfuzz.git && cd sharpfuzz && pip install -r requirements.txt"
    ["cfssl"]="git clone https://github.com/cloudflare/cfssl.git && cd cfssl && go build"
)

# Function to install each tool
install_tool() {
    local tool="$1"
    echo "Installing $tool..."
    eval "${commands[$tool]}"
}

# Iterate over each tool and install
for tool in "${!commands[@]}"; do
    install_tool "$tool"
done

echo "All tools have been installed."
